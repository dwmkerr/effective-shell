"use strict";(self.webpackChunkeffective_shell=self.webpackChunkeffective_shell||[]).push([[6195],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>c});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function d(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var m=a.createContext({}),o=function(t){var e=a.useContext(m),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=o(t.components);return a.createElement(m.Provider,{value:e},t.children)},k="mdxType",N={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,m=t.parentName,p=d(t,["components","mdxType","originalType","parentName"]),k=o(n),u=r,c=k["".concat(m,".").concat(u)]||k[u]||N[u]||l;return n?a.createElement(c,i(i({ref:e},p),{},{components:n})):a.createElement(c,i({ref:e},p))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=u;var d={};for(var m in e)hasOwnProperty.call(e,m)&&(d[m]=e[m]);d.originalType=t,d[k]="string"==typeof t?t:r,i[1]=d;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2482:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const l={},i=void 0,d={unversionedId:"xx-appendices/index-of-commands",id:"xx-appendices/index-of-commands",title:"index-of-commands",description:"| Command                         | Description                                                                                 |",source:"@site/docs/xx-appendices/index-of-commands.md",sourceDirName:"xx-appendices",slug:"/xx-appendices/index-of-commands",permalink:"/xx-appendices/index-of-commands",draft:!1,editUrl:"https://github.com/dwmkerr/effective-shell/edit/main/docs/xx-appendices/index-of-commands.md",tags:[],version:"current",frontMatter:{}},m={},o=[],p={toc:o};function k(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cd")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ls")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pwd")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mkdir")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rm")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rmdir")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cd")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cd")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pstree -p $$")),(0,r.kt)("td",{parentName:"tr",align:null},"Show the process tree for the current shell process.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Shell Configuration")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"shopt")),(0,r.kt)("td",{parentName:"tr",align:null},"Set or unset a shell option.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"chsh")),(0,r.kt)("td",{parentName:"tr",align:null},"Change the shell for a user.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"User Management")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"useradd -m name")),(0,r.kt)("td",{parentName:"tr",align:null},"Add user with the name ",(0,r.kt)("inlineCode",{parentName:"td"},"name"),". ",(0,r.kt)("inlineCode",{parentName:"td"},"-m")," creates a home directory ",(0,r.kt)("inlineCode",{parentName:"td"},"name"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"passwd name")),(0,r.kt)("td",{parentName:"tr",align:null},"Set the password for user ",(0,r.kt)("inlineCode",{parentName:"td"},"name"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"userdel name")),(0,r.kt)("td",{parentName:"tr",align:null},"Remove user with the name ",(0,r.kt)("inlineCode",{parentName:"td"},"name"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"usermod -aG sudo name")),(0,r.kt)("td",{parentName:"tr",align:null},"Make ",(0,r.kt)("inlineCode",{parentName:"td"},"name")," a sudoer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"---------------------------------"),(0,r.kt)("td",{parentName:"tr",align:null},"---------------------------------------------------------------------------------------------")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Git")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git init")),(0,r.kt)("td",{parentName:"tr",align:null},"Initialise a new Git Repository.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git status")),(0,r.kt)("td",{parentName:"tr",align:null},"Show the status of the working tree and index.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git add <files>")),(0,r.kt)("td",{parentName:"tr",align:null},"Stage ",(0,r.kt)("inlineCode",{parentName:"td"},"files")," - you can use patterns and wildcards.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git reset <files>")),(0,r.kt)("td",{parentName:"tr",align:null},"Unstage ",(0,r.kt)("inlineCode",{parentName:"td"},"files")," - you can use patterns and wildcards.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git rm --cached <files>")),(0,r.kt)("td",{parentName:"tr",align:null},"Unstage ",(0,r.kt)("inlineCode",{parentName:"td"},"files")," - you can use patterns and wildcards.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git commit")),(0,r.kt)("td",{parentName:"tr",align:null},"Create a commit from the current index - the shell editor will open for the commit message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git commit -m 'message'")),(0,r.kt)("td",{parentName:"tr",align:null},"Create a commit with message ",(0,r.kt)("inlineCode",{parentName:"td"},"message"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git commit -a")),(0,r.kt)("td",{parentName:"tr",align:null},"Stage and commit all changes in the working tree.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git checkout <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Checkout a branch called ",(0,r.kt)("inlineCode",{parentName:"td"},"branch"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git checkout -b branch")),(0,r.kt)("td",{parentName:"tr",align:null},"Create and checkout a new branch called ",(0,r.kt)("inlineCode",{parentName:"td"},"branch"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git branch <name>")),(0,r.kt)("td",{parentName:"tr",align:null},"Create a branch called ",(0,r.kt)("inlineCode",{parentName:"td"},"name")," but do not check it out.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git branch -m <new_name>")),(0,r.kt)("td",{parentName:"tr",align:null},"Change the current branch name to ",(0,r.kt)("inlineCode",{parentName:"td"},"new_name"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git merge <branch>")),(0,r.kt)("td",{parentName:"tr",align:null},"Merge the branch named ",(0,r.kt)("inlineCode",{parentName:"td"},"branch")," into the current branch.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git log")),(0,r.kt)("td",{parentName:"tr",align:null},"Show the log of commits.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git log --oneline --branch")),(0,r.kt)("td",{parentName:"tr",align:null},"Show the log of commits, one line per commit, with the branch graph.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git rm <files>")),(0,r.kt)("td",{parentName:"tr",align:null},"Stage the removal of ",(0,r.kt)("inlineCode",{parentName:"td"},"files")," from the repostiry - you can use patterns and wildcards.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git mv <source> <destination>")),(0,r.kt)("td",{parentName:"tr",align:null},"Stage the movement of ",(0,r.kt)("inlineCode",{parentName:"td"},"source")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"destination"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git checkout 8342bec")),(0,r.kt)("td",{parentName:"tr",align:null},"Checkout a commit with SHA ",(0,r.kt)("inlineCode",{parentName:"td"},"834bec"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git checkout HEAD~1")),(0,r.kt)("td",{parentName:"tr",align:null},"Move the current HEAD back one commit.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git checkout <branch>~3")),(0,r.kt)("td",{parentName:"tr",align:null},"Checkout ",(0,r.kt)("inlineCode",{parentName:"td"},"branch"),", move back three commits from the tip.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"grep"),(0,r.kt)("li",{parentName:"ul"},"mkdir"),(0,r.kt)("li",{parentName:"ul"},"rm"),(0,r.kt)("li",{parentName:"ul"},"rmdir"),(0,r.kt)("li",{parentName:"ul"},"touch"),(0,r.kt)("li",{parentName:"ul"},"cat"),(0,r.kt)("li",{parentName:"ul"},"watch"),(0,r.kt)("li",{parentName:"ul"},"tail"),(0,r.kt)("li",{parentName:"ul"},"head"),(0,r.kt)("li",{parentName:"ul"},"less"),(0,r.kt)("li",{parentName:"ul"},"more"),(0,r.kt)("li",{parentName:"ul"},"most"),(0,r.kt)("li",{parentName:"ul"},"echo"),(0,r.kt)("li",{parentName:"ul"},"timeout"),(0,r.kt)("li",{parentName:"ul"},"until"),(0,r.kt)("li",{parentName:"ul"},"pwd -P (physical, shows symlinks)")))}k.isMDXComponent=!0}}]);