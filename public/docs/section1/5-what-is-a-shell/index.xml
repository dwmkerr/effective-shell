<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Effective Shell</title><link>https://dwmkerr.github.io/effective-shell/docs/section1/5-what-is-a-shell/</link><description>Recent content on Effective Shell</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dwmkerr.github.io/effective-shell/docs/section1/5-what-is-a-shell/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://dwmkerr.github.io/effective-shell/docs/section1/5-what-is-a-shell/hack-on/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwmkerr.github.io/effective-shell/docs/section1/5-what-is-a-shell/hack-on/</guid><description>Hack On! See those system calls! I mentioned earlier on that if you make a call like fopen, the Kernel is going to provide access to a file. It's quite easy to see this in action. Check the code below:
#include &amp;lt;stdio.h&amp;gt; void main() { void* handle = fopen(&amp;#34;/tmp/some-file&amp;#34;); fwrite(handle, &amp;#34;some text&amp;#34;); fclose(handle); } If you compile this program, then run XXX you will see the actual calls made to the Kernel.</description></item></channel></rss>